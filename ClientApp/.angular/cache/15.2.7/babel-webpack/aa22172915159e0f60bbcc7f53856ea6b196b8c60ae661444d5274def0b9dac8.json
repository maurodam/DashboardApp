{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DraggableElementComponent {\n  constructor(elementRef) {\n    this.elementRef = elementRef;\n    this.isDragging = false;\n    this.draggableElement = [];\n  }\n  ngOnInit() {\n    this.draggableElement.push();\n  }\n  onDrag(event) {\n    if (this.isDragging) {\n      const x = event.clientX - this.initialX;\n      const y = event.clientY - this.initialY;\n      this.elementRef.nativeElement.style.transform = `translate(${x}px, ${y}px)`;\n    }\n  }\n  onDragStart(event) {\n    this.isDragging = true;\n    this.initialX = event.clientX - this.elementRef.nativeElement.getBoundingClientRect().left;\n    this.initialY = event.clientY - this.elementRef.nativeElement.getBoundingClientRect().top;\n  }\n  onDragEnd() {\n    if (this.isDragging) {\n      this.isDragging = false;\n      const element = this.elementRef.nativeElement;\n      const x = element.getBoundingClientRect().left;\n      const y = element.getBoundingClientRect().top;\n      // Ora puoi salvare le coordinate (x, y) nel tuo database o in una variabile\n      // e inviare i dati al server se necessario.\n    }\n  }\n}\n\nDraggableElementComponent.ɵfac = function DraggableElementComponent_Factory(t) {\n  return new (t || DraggableElementComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nDraggableElementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DraggableElementComponent,\n  selectors: [[\"app-draggable-element\"]],\n  hostBindings: function DraggableElementComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousemove\", function DraggableElementComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onDrag($event);\n      }, false, i0.ɵɵresolveWindow)(\"mousedown\", function DraggableElementComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onDragStart($event);\n      })(\"mouseup\", function DraggableElementComponent_mouseup_HostBindingHandler() {\n        return ctx.onDragEnd();\n      }, false, i0.ɵɵresolveWindow);\n    }\n  },\n  decls: 2,\n  vars: 0,\n  consts: [[1, \"draggable-element\", 3, \"mousedown\", \"mousemove\", \"mouseup\"]],\n  template: function DraggableElementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.onDragStart($event);\n      })(\"mousemove\", function DraggableElementComponent_Template_div_mousemove_0_listener($event) {\n        return ctx.onDrag($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseup\", function DraggableElementComponent_Template_div_mouseup_0_listener() {\n        return ctx.onDragEnd();\n      }, false, i0.ɵɵresolveDocument);\n      i0.ɵɵtext(1, \" elemento1\\n\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".draggable-element[_ngcontent-%COMP%] {\\r\\n  width: 100px;\\r\\n  height: 100px;\\r\\n  background-color: gray;\\r\\n  color: white;\\r\\n  position: absolute;\\r\\n  -webkit-user-select: none;\\r\\n          user-select: none;\\r\\n  cursor: grab;\\r\\n}\\r\\n\\r\\n  .draggable-element[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    line-height: 100px;\\r\\n    margin: 0;\\r\\n    cursor: grab;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kcmFnZ2FibGUtZWxlbWVudC9kcmFnZ2FibGUtZWxlbWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQix5QkFBaUI7VUFBakIsaUJBQWlCO0VBQ2pCLFlBQVk7QUFDZDs7RUFFRTtJQUNFLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULFlBQVk7RUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5kcmFnZ2FibGUtZWxlbWVudCB7XHJcbiAgd2lkdGg6IDEwMHB4O1xyXG4gIGhlaWdodDogMTAwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHVzZXItc2VsZWN0OiBub25lO1xyXG4gIGN1cnNvcjogZ3JhYjtcclxufVxyXG5cclxuICAuZHJhZ2dhYmxlLWVsZW1lbnQgcCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBsaW5lLWhlaWdodDogMTAwcHg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBjdXJzb3I6IGdyYWI7XHJcbiAgfVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";AASA,OAAM,MAAOA,yBAAyB;EAOpCC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IANtB,eAAU,GAAG,KAAK;IAI1B,qBAAgB,GAAuB,EAAE;EAEK;EAE9CC,QAAQ;IACN,IAAI,CAACC,gBAAgB,CAACC,IAAI,EAAE;EAC9B;EAGAC,MAAM,CAACC,KAAiB;IACtB,IAAI,IAAI,CAACC,UAAU,EAAE;MACnB,MAAMC,CAAC,GAAGF,KAAK,CAACG,OAAO,GAAG,IAAI,CAACC,QAAQ;MACvC,MAAMC,CAAC,GAAGL,KAAK,CAACM,OAAO,GAAG,IAAI,CAACC,QAAQ;MACvC,IAAI,CAACZ,UAAU,CAACa,aAAa,CAACC,KAAK,CAACC,SAAS,GAAG,aAAaR,CAAC,OAAOG,CAAC,KAAK;;EAE/E;EAGAM,WAAW,CAACX,KAAiB;IAC3B,IAAI,CAACC,UAAU,GAAG,IAAI;IACtB,IAAI,CAACG,QAAQ,GAAGJ,KAAK,CAACG,OAAO,GAAG,IAAI,CAACR,UAAU,CAACa,aAAa,CAACI,qBAAqB,EAAE,CAACC,IAAI;IAC1F,IAAI,CAACN,QAAQ,GAAGP,KAAK,CAACM,OAAO,GAAG,IAAI,CAACX,UAAU,CAACa,aAAa,CAACI,qBAAqB,EAAE,CAACE,GAAG;EAC3F;EAGAC,SAAS;IACP,IAAI,IAAI,CAACd,UAAU,EAAE;MACnB,IAAI,CAACA,UAAU,GAAG,KAAK;MACvB,MAAMe,OAAO,GAAG,IAAI,CAACrB,UAAU,CAACa,aAAa;MAC7C,MAAMN,CAAC,GAAGc,OAAO,CAACJ,qBAAqB,EAAE,CAACC,IAAI;MAC9C,MAAMR,CAAC,GAAGW,OAAO,CAACJ,qBAAqB,EAAE,CAACE,GAAG;MAE7C;MACA;;EAEJ;;;AAxCWrB,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAAwB;EAAAC;IAAA;;eAAzBC,kBAAc;MAAA;QAAA,OAAdA,uBAAmB;MAAA;QAAA,OAAnBA,eAAW;MAAA;;;;;;;;MCTxBC,8BAAwI;MAAzGA;QAAA,OAAaD,uBAAmB;MAAA,EAAC;QAAA,OAAuBA,kBAAc;MAAA,+BAArC;QAAA,OAA2DA,eAAW;MAAA,+BAAtE;MAC9DC,4BACF;MAAAA,iBAAM","names":["DraggableElementComponent","constructor","elementRef","ngOnInit","draggableElement","push","onDrag","event","isDragging","x","clientX","initialX","y","clientY","initialY","nativeElement","style","transform","onDragStart","getBoundingClientRect","left","top","onDragEnd","element","selectors","hostBindings","ctx","i0"],"sourceRoot":"","sources":["C:\\src\\dotnet\\DashboardApp\\ClientApp\\src\\app\\components\\draggable-element\\draggable-element.component.ts","C:\\src\\dotnet\\DashboardApp\\ClientApp\\src\\app\\components\\draggable-element\\draggable-element.component.html"],"sourcesContent":["import { Component, ElementRef, HostListener } from '@angular/core';\nimport { DraggableElement } from '../../models/draggable-element.model';\r\n\n@Component({\n  selector: 'app-draggable-element',\n  templateUrl: './draggable-element.component.html',\n  styleUrls: ['./draggable-element.component.css']\n})\n\nexport class DraggableElementComponent {\n  private isDragging = false;\n  private initialX: any;\n  private initialY: any;\n\n  draggableElement: DraggableElement[] = [];\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnInit(): void {\n    this.draggableElement.push();\n  }\n\n  @HostListener('window:mousemove', ['$event'])\n  onDrag(event: MouseEvent): void {\n    if (this.isDragging) {\n      const x = event.clientX - this.initialX;\n      const y = event.clientY - this.initialY;\n      this.elementRef.nativeElement.style.transform = `translate(${x}px, ${y}px)`;\n    }\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onDragStart(event: MouseEvent): void {\n    this.isDragging = true;\n    this.initialX = event.clientX - this.elementRef.nativeElement.getBoundingClientRect().left;\n    this.initialY = event.clientY - this.elementRef.nativeElement.getBoundingClientRect().top;\n  }\n\n  @HostListener('window:mouseup')\n  onDragEnd(): void {\n    if (this.isDragging) {\n      this.isDragging = false;\n      const element = this.elementRef.nativeElement;\n      const x = element.getBoundingClientRect().left;\n      const y = element.getBoundingClientRect().top;\n\n      // Ora puoi salvare le coordinate (x, y) nel tuo database o in una variabile\n      // e inviare i dati al server se necessario.\n    }\n  }\n}\n\n\n\n\n","<div class=\"draggable-element\" (mousedown)=\"onDragStart($event)\" (document:mousemove)=\"onDrag($event)\" (document:mouseup)=\"onDragEnd()\">\r\n  elemento1\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}