{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { HostListener } from '@angular/core';\n// Sostituisci con l'URL del tuo backend API\nconst apiUrl = 'https://localhost:7164';\nexport class DraggableElementComponent {\n  ngOnInit() {\n    this.getCoordinatesByName('elemento1');\n  }\n  constructor(http) {\n    this.http = http;\n    this.isDragging = false;\n    this.draggedElement = null;\n  }\n  onDrag(event) {\n    if (this.isDragging && this.draggedElement) {\n      this.draggedElement.style.left = event.clientX + 'px';\n      this.draggedElement.style.top = event.clientY + 'px';\n    }\n  }\n  onDragEnd(event) {\n    if (this.isDragging && this.draggedElement) {\n      this.isDragging = false;\n      // Ottieni le coordinate dell'elemento trascinato come stringhe\n      const topValue = this.draggedElement.style.top;\n      const leftValue = this.draggedElement.style.left;\n      // Rimuovi \"px\" dai valori e converti in numeri\n      const topNumeric = parseInt(topValue, 10);\n      const leftNumeric = parseInt(leftValue, 10);\n      const coordinates = {\n        name: this.draggedElement.id,\n        x: topNumeric,\n        y: leftNumeric\n      };\n      // Invia le coordinate al backend tramite una chiamata API\n      this.saveCoordinates(coordinates);\n      this.draggedElement = null;\n    }\n  }\n  onDragStart(event) {\n    this.isDragging = true;\n    this.draggedElement = event.target;\n  }\n  saveCoordinates(coordinates) {\n    this.http.post(`${apiUrl}/api/SaveCoordinate`, coordinates).subscribe(response => {\n      console.log('Coordinate salvate:', coordinates);\n    }, error => {\n      console.error('Errore durante il salvataggio delle coordinate:', error);\n      // Puoi gestire l'errore qui, ad esempio, mostrare un messaggio all'utente o effettuare altre azioni\n    });\n  }\n\n  getCoordinatesByName(elementName) {\n    this.http.get(`${apiUrl}/GetCoordinate`).subscribe(response => {\n      const elements = response.elements;\n      const element = elements.find(e => e.name === elementName);\n      if (element) {\n        const elementname = element.name;\n        const elementTop = element.y; // Assumendo che Y sia la coordinata verticale\n        const elementLeft = element.x; // Assumendo che X sia la coordinata orizzontale\n        //const elementToPosition = this.draggableContainer.nativeElement.querySelector(`#${elementId}`);\n        //if (elementToPosition) {\n        //  elementToPosition.style.top = `${elementTop}px`;\n        //  elementToPosition.style.left = `${elementLeft}px`;\n        //}\n      }\n    });\n  }\n}\n\n__decorate([HostListener('document:mousemove', ['$event'])], DraggableElementComponent.prototype, \"onDrag\", null);\n__decorate([HostListener('document:mouseup', ['$event'])], DraggableElementComponent.prototype, \"onDragEnd\", null);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}