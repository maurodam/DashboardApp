{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DraggableElementComponent {\n  constructor(http) {\n    this.http = http;\n    this.isDragging = false;\n    this.draggedElement = null;\n    this.apiUrl = 'https://localhost:7164';\n  }\n  ngOnInit() {\n    this.getCoordinatesByName('element1');\n    this.getCoordinatesByName('element2');\n    this.getCoordinatesByName('element3');\n  }\n  onDrag(event) {\n    if (this.isDragging && this.draggedElement) {\n      this.draggedElement.style.top = event.clientY + 'px';\n      this.draggedElement.style.left = event.clientX + 'px';\n    }\n  }\n  onDragEnd(event) {\n    if (this.isDragging && this.draggedElement) {\n      this.isDragging = false;\n      // Ottengo le coordinate dell'elemento trascinato come stringhe\n      const topValue = this.draggedElement.style.top;\n      const leftValue = this.draggedElement.style.left;\n      // Rimuovo \"px\" dai valori e converto in int per salvare su db\n      const topNumeric = parseInt(topValue, 10);\n      const leftNumeric = parseInt(leftValue, 10);\n      const coordinates = {\n        name: this.draggedElement.id,\n        x: leftNumeric,\n        y: topNumeric\n      };\n      this.saveCoordinates(coordinates);\n      this.draggedElement = null;\n    }\n  }\n  onDragStart(event) {\n    this.isDragging = true;\n    this.draggedElement = event.target;\n  }\n  saveCoordinates(coordinates) {\n    this.http.post(`${this.apiUrl}/api/SaveCoordinate`, coordinates).subscribe(response => {\n      console.log('Coordinate salvate:', coordinates);\n    }, error => {\n      console.error('Errore durante il salvataggio delle coordinate:', error);\n    });\n  }\n  getCoordinatesByName(elementName) {\n    this.http.get(`${this.apiUrl}/api/GetCoordinate?elementName=${elementName}`).subscribe(response => {\n      const element = response;\n      if (element) {\n        const name = element.name;\n        const elementTop = element.y;\n        const elementLeft = element.x;\n        console.log('Coordinate salvate:', name, 'top y' + elementTop, 'left x' + elementLeft);\n        const elementToPosition = document.getElementById(name);\n        if (elementToPosition) {\n          elementToPosition.style.top = `${elementTop}px`;\n          elementToPosition.style.left = `${elementLeft}px`;\n        }\n      }\n    });\n  }\n}\nDraggableElementComponent.ɵfac = function DraggableElementComponent_Factory(t) {\n  return new (t || DraggableElementComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nDraggableElementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DraggableElementComponent,\n  selectors: [[\"app-draggable-element\"]],\n  hostBindings: function DraggableElementComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousemove\", function DraggableElementComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onDrag($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseup\", function DraggableElementComponent_mouseup_HostBindingHandler($event) {\n        return ctx.onDragEnd($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 11,\n  vars: 0,\n  consts: [[2, \"background-color\", \"aquamarine\", \"width\", \"100%\", \"height\", \"100%\"], [1, \"draggable-container\"], [\"id\", \"element1\", 1, \"draggable\", 3, \"mousedown\", \"mouseup\"], [\"draggable\", \"\"], [\"id\", \"element2\", 1, \"draggable\", 3, \"mousedown\", \"mouseup\"], [\"id\", \"element3\", 1, \"draggable\", 3, \"mousedown\", \"mouseup\"]],\n  template: function DraggableElementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2, 3);\n      i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_Template_div_mousedown_2_listener($event) {\n        return ctx.onDragStart($event);\n      })(\"mouseup\", function DraggableElementComponent_Template_div_mouseup_2_listener($event) {\n        return ctx.onDragEnd($event);\n      });\n      i0.ɵɵtext(4, \"Elemento 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4, 3);\n      i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_Template_div_mousedown_5_listener($event) {\n        return ctx.onDragStart($event);\n      })(\"mouseup\", function DraggableElementComponent_Template_div_mouseup_5_listener($event) {\n        return ctx.onDragEnd($event);\n      });\n      i0.ɵɵtext(7, \"Elemento 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5, 3);\n      i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_Template_div_mousedown_8_listener($event) {\n        return ctx.onDragStart($event);\n      })(\"mouseup\", function DraggableElementComponent_Template_div_mouseup_8_listener($event) {\n        return ctx.onDragEnd($event);\n      });\n      i0.ɵɵtext(10, \"Elemento 3\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  styles: [\".draggable-element[_ngcontent-%COMP%] {\\r\\n  width: 100px;\\r\\n  height: 100px;\\r\\n  background-color: gray;\\r\\n  color: white;\\r\\n  position: absolute;\\r\\n  -webkit-user-select: none;\\r\\n          user-select: none;\\r\\n  cursor: grab;\\r\\n}\\r\\n\\r\\n  .draggable-element[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    line-height: 100px;\\r\\n    margin: 0;\\r\\n    cursor: grab;\\r\\n  }\\r\\n\\r\\n\\r\\n.draggable-container[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.draggable[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  background-color: #3498db;\\r\\n  color: #ffffff;\\r\\n  padding: 10px;\\r\\n  cursor: grab;\\r\\n}\\r\\n\\r\\n.dragging[_ngcontent-%COMP%] {\\r\\n  cursor: grabbing;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kcmFnZ2FibGUtZWxlbWVudC9kcmFnZ2FibGUtZWxlbWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQix5QkFBaUI7VUFBakIsaUJBQWlCO0VBQ2pCLFlBQVk7QUFDZDs7RUFFRTtJQUNFLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULFlBQVk7RUFDZDs7O0FBR0Y7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxhQUFhO0VBQ2IsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwic291cmNlc0NvbnRlbnQiOlsiLmRyYWdnYWJsZS1lbGVtZW50IHtcclxuICB3aWR0aDogMTAwcHg7XHJcbiAgaGVpZ2h0OiAxMDBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgY3Vyc29yOiBncmFiO1xyXG59XHJcblxyXG4gIC5kcmFnZ2FibGUtZWxlbWVudCBwIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxMDBweDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIGN1cnNvcjogZ3JhYjtcclxuICB9XHJcblxyXG5cclxuLmRyYWdnYWJsZS1jb250YWluZXIge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLmRyYWdnYWJsZSB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDk4ZGI7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBjdXJzb3I6IGdyYWI7XHJcbn1cclxuXHJcbi5kcmFnZ2luZyB7XHJcbiAgY3Vyc29yOiBncmFiYmluZztcclxufVxyXG5cclxuXHJcblxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["DraggableElementComponent","constructor","http","ngOnInit","getCoordinatesByName","onDrag","event","isDragging","draggedElement","style","top","clientY","left","clientX","onDragEnd","topValue","leftValue","topNumeric","parseInt","leftNumeric","coordinates","name","id","x","y","saveCoordinates","onDragStart","target","post","apiUrl","subscribe","response","console","log","error","elementName","get","element","elementTop","elementLeft","elementToPosition","document","getElementById","selectors","hostBindings","ctx","i0"],"sourceRoot":"","sources":["C:\\src\\dotnet\\DashboardApp\\ClientApp\\src\\app\\components\\draggable-element\\draggable-element.component.ts","C:\\src\\dotnet\\DashboardApp\\ClientApp\\src\\app\\components\\draggable-element\\draggable-element.component.html"],"sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DraggableElement } from '../../models/draggable-element.model';\r\n\r\n@Component({\r\n  selector: 'app-draggable-element',\r\n  templateUrl: './draggable-element.component.html',\r\n  styleUrls: ['./draggable-element.component.css'],\r\n})\r\n\r\nexport class DraggableElementComponent implements OnInit {\r\n\r\n  private isDragging = false;\r\n  private draggedElement: HTMLElement | null = null;\r\n  private apiUrl = 'https://localhost:7164';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getCoordinatesByName('element1');\r\n    this.getCoordinatesByName('element2');\r\n    this.getCoordinatesByName('element3');\r\n  }\r\n  @HostListener('document:mousemove', ['$event'])\r\n  onDrag(event: MouseEvent): void {\r\n    if (this.isDragging && this.draggedElement) {\r\n      this.draggedElement.style.top = event.clientY + 'px';\r\n      this.draggedElement.style.left = event.clientX + 'px';\r\n    }\r\n  }\r\n\r\n  @HostListener('document:mouseup', ['$event'])\r\n  onDragEnd(event: MouseEvent): void {\r\n    if (this.isDragging && this.draggedElement) {\r\n      this.isDragging = false;\r\n\r\n      // Ottengo le coordinate dell'elemento trascinato come stringhe\r\n      const topValue = this.draggedElement.style.top;\r\n      const leftValue = this.draggedElement.style.left;\r\n\r\n      // Rimuovo \"px\" dai valori e converto in int per salvare su db\r\n      const topNumeric = parseInt(topValue, 10);\r\n      const leftNumeric = parseInt(leftValue, 10);\r\n\r\n      const coordinates = {\r\n        name: this.draggedElement.id,\r\n        x: leftNumeric,\r\n        y: topNumeric,\r\n      };\r\n\r\n      this.saveCoordinates(coordinates);\r\n\r\n      this.draggedElement = null;\r\n    }\r\n  }\r\n\r\n  onDragStart(event: MouseEvent): void {\r\n    this.isDragging = true;\r\n    this.draggedElement = event.target as HTMLElement;\r\n  }\r\n\r\n  private saveCoordinates(coordinates: any): void {\r\n    this.http.post(`${this.apiUrl}/api/SaveCoordinate`, coordinates)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log('Coordinate salvate:', coordinates);\r\n        },\r\n        (error) => {\r\n          console.error('Errore durante il salvataggio delle coordinate:', error);\r\n        }\r\n      );\r\n  }\r\n\r\n  private getCoordinatesByName(elementName: string): void {\r\n    this.http.get<any>(`${this.apiUrl}/api/GetCoordinate?elementName=${elementName}`)\r\n      .subscribe((response: any) => {\r\n        const element: DraggableElement = response;\r\n\r\n        if (element) {\r\n          const name = element.name;\r\n          const elementTop = element.y; \r\n          const elementLeft = element.x; \r\n\r\n          console.log('Coordinate salvate:', name, 'top y' + elementTop, 'left x' + elementLeft);\r\n\r\n          const elementToPosition = document.getElementById(name) as HTMLElement;\r\n\r\n          if (elementToPosition) {\r\n            elementToPosition.style.top = `${elementTop}px`;\r\n            elementToPosition.style.left = `${elementLeft}px`;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","<div style=\"background-color: aquamarine; width: 100%; height: 100%;\">\r\n  <div class=\"draggable-container\">\r\n    <div class=\"draggable\" #draggable\r\n         id=\"element1\" (mousedown)=\"onDragStart($event)\" (mouseup)=\"onDragEnd($event)\">Elemento 1</div>\r\n    <div class=\"draggable\" #draggable\r\n         id=\"element2\" (mousedown)=\"onDragStart($event)\" (mouseup)=\"onDragEnd($event)\">Elemento 2</div>\r\n    <div class=\"draggable\" #draggable\r\n         id=\"element3\" (mousedown)=\"onDragStart($event)\" (mouseup)=\"onDragEnd($event)\">Elemento 3</div>\r\n  </div>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}