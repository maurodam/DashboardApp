{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nfunction DraggableElementComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_div_9_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onDragStart($event));\n    })(\"mouseup\", function DraggableElementComponent_div_9_Template_div_mouseup_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onDragEnd($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r2 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"top\", element_r2.top, \"px\")(\"left\", element_r2.left, \"px\");\n    i0.ɵɵproperty(\"id\", element_r2.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r2.name);\n  }\n}\nexport class DraggableElementComponent {\n  constructor(http) {\n    this.http = http;\n    this.isDragging = false;\n    this.draggedElement = null;\n  }\n  onDrag(event) {\n    if (this.isDragging && this.draggedElement) {\n      this.draggedElement.style.left = event.clientX + 'px';\n      this.draggedElement.style.top = event.clientY + 'px';\n    }\n  }\n  onDragEnd(event) {\n    if (this.isDragging && this.draggedElement) {\n      this.isDragging = false;\n      // Ottieni le coordinate dell'elemento trascinato come stringhe\n      const topValue = this.draggedElement.style.top;\n      const leftValue = this.draggedElement.style.left;\n      // Rimuovi \"px\" dai valori e converti in numeri\n      const topNumeric = parseInt(topValue, 10);\n      const leftNumeric = parseInt(leftValue, 10);\n      const coordinates = {\n        id: this.draggedElement.id,\n        x: topNumeric,\n        y: leftNumeric\n      };\n      // Invia le coordinate al backend tramite una chiamata API\n      this.saveCoordinates(coordinates);\n      this.draggedElement = null;\n    }\n  }\n  onDragStart(event) {\n    this.isDragging = true;\n    this.draggedElement = event.target;\n  }\n  saveCoordinates(coordinates) {\n    // Sostituisci con l'URL del tuo backend API\n    const apiUrl = 'https://localhost:7164';\n    this.http.post(`${apiUrl}/api/SaveCoordinate`, coordinates).subscribe(response => {\n      console.log('Coordinate salvate:', coordinates);\n    }, error => {\n      console.error('Errore durante il salvataggio delle coordinate:', error);\n      // Puoi gestire l'errore qui, ad esempio, mostrare un messaggio all'utente o effettuare altre azioni\n    });\n  }\n\n  getCoordinatesFromAPI() {\n    const apiUrl = 'https://localhost:7164';\n    this.http.get(`${this.apiUrl}/GetCoordinate`).subscribe(elements => {\n      if (elements && elements.length > 0) {\n        elements.forEach(element => {\n          const elementId = element.id;\n          const elementTop = element.top;\n          const elementLeft = element.left;\n          const elementToPosition = this.draggableContainer.nativeElement.querySelector(`#${elementId}`);\n          if (elementToPosition) {\n            elementToPosition.style.top = `${elementTop}px`;\n            elementToPosition.style.left = `${elementLeft}px`;\n          }\n        });\n      }\n    });\n  }\n}\nDraggableElementComponent.ɵfac = function DraggableElementComponent_Factory(t) {\n  return new (t || DraggableElementComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nDraggableElementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DraggableElementComponent,\n  selectors: [[\"app-draggable-element\"]],\n  hostBindings: function DraggableElementComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousemove\", function DraggableElementComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onDrag($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseup\", function DraggableElementComponent_mouseup_HostBindingHandler($event) {\n        return ctx.onDragEnd($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 10,\n  vars: 1,\n  consts: [[1, \"draggable-container\"], [\"id\", \"1\", 1, \"draggable\", 3, \"mousedown\", \"mouseup\"], [\"id\", \"3\", 1, \"draggable\", 3, \"mousedown\", \"mouseup\"], [\"draggableContainer\", \"\"], [\"class\", \"draggable\", 3, \"id\", \"top\", \"left\", \"mousedown\", \"mouseup\", 4, \"ngFor\", \"ngForOf\"], [1, \"draggable\", 3, \"id\", \"mousedown\", \"mouseup\"]],\n  template: function DraggableElementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_Template_div_mousedown_1_listener($event) {\n        return ctx.onDragStart($event);\n      })(\"mouseup\", function DraggableElementComponent_Template_div_mouseup_1_listener($event) {\n        return ctx.onDragEnd($event);\n      });\n      i0.ɵɵtext(2, \"Elemento 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_Template_div_mousedown_3_listener($event) {\n        return ctx.onDragStart($event);\n      })(\"mouseup\", function DraggableElementComponent_Template_div_mouseup_3_listener($event) {\n        return ctx.onDragEnd($event);\n      });\n      i0.ɵɵtext(4, \"Elemento 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 2);\n      i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_Template_div_mousedown_5_listener($event) {\n        return ctx.onDragStart($event);\n      })(\"mouseup\", function DraggableElementComponent_Template_div_mouseup_5_listener($event) {\n        return ctx.onDragEnd($event);\n      });\n      i0.ɵɵtext(6, \"Elemento 3\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(7, \"div\", 0, 3);\n      i0.ɵɵtemplate(9, DraggableElementComponent_div_9_Template, 2, 6, \"div\", 4);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.elements);\n    }\n  },\n  styles: [\".draggable-element[_ngcontent-%COMP%] {\\r\\n  width: 100px;\\r\\n  height: 100px;\\r\\n  background-color: gray;\\r\\n  color: white;\\r\\n  position: absolute;\\r\\n  -webkit-user-select: none;\\r\\n          user-select: none;\\r\\n  cursor: grab;\\r\\n}\\r\\n\\r\\n  .draggable-element[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\r\\n    text-align: center;\\r\\n    line-height: 100px;\\r\\n    margin: 0;\\r\\n    cursor: grab;\\r\\n  }\\r\\n\\r\\n\\r\\n.draggable-container[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.draggable[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  background-color: #3498db;\\r\\n  color: #ffffff;\\r\\n  padding: 10px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.dragging[_ngcontent-%COMP%] {\\r\\n  cursor: grabbing;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kcmFnZ2FibGUtZWxlbWVudC9kcmFnZ2FibGUtZWxlbWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQix5QkFBaUI7VUFBakIsaUJBQWlCO0VBQ2pCLFlBQVk7QUFDZDs7RUFFRTtJQUNFLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULFlBQVk7RUFDZDs7O0FBR0Y7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxhQUFhO0VBQ2IsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGdCQUFnQjtBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbIi5kcmFnZ2FibGUtZWxlbWVudCB7XHJcbiAgd2lkdGg6IDEwMHB4O1xyXG4gIGhlaWdodDogMTAwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHVzZXItc2VsZWN0OiBub25lO1xyXG4gIGN1cnNvcjogZ3JhYjtcclxufVxyXG5cclxuICAuZHJhZ2dhYmxlLWVsZW1lbnQgcCB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBsaW5lLWhlaWdodDogMTAwcHg7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBjdXJzb3I6IGdyYWI7XHJcbiAgfVxyXG5cclxuXHJcbi5kcmFnZ2FibGUtY29udGFpbmVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5kcmFnZ2FibGUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ5OGRiO1xyXG4gIGNvbG9yOiAjZmZmZmZmO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcblxyXG4uZHJhZ2dpbmcge1xyXG4gIGN1cnNvcjogZ3JhYmJpbmc7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","DraggableElementComponent","constructor","http","onDrag","event","isDragging","draggedElement","style","left","clientX","top","clientY","onDragEnd","topValue","leftValue","topNumeric","parseInt","leftNumeric","coordinates","id","x","y","saveCoordinates","onDragStart","target","apiUrl","post","subscribe","response","console","log","error","getCoordinatesFromAPI","get","elements","length","forEach","element","elementId","elementTop","elementLeft","elementToPosition","draggableContainer","nativeElement","querySelector","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\src\\dotnet\\DashboardApp\\ClientApp\\src\\app\\components\\draggable-element\\draggable-element.component.html","C:\\src\\dotnet\\DashboardApp\\ClientApp\\src\\app\\components\\draggable-element\\draggable-element.component.ts"],"sourcesContent":["<div class=\"draggable-container\">\r\n  <div class=\"draggable\" id=\"1\" (mousedown)=\"onDragStart($event)\" (mouseup)=\"onDragEnd($event)\">Elemento 1</div>\r\n  <div class=\"draggable\" id=\"3\" (mousedown)=\"onDragStart($event)\" (mouseup)=\"onDragEnd($event)\">Elemento 2</div>\r\n  <div class=\"draggable\" id=\"3\" (mousedown)=\"onDragStart($event)\" (mouseup)=\"onDragEnd($event)\">Elemento 3</div>\r\n</div>\r\n\r\n<div class=\"draggable-container\" #draggableContainer>\r\n  <div class=\"draggable\" *ngFor=\"let element of elements\" [id]=\"element.id\" [style.top.px]=\"element.top\" [style.left.px]=\"element.left\" (mousedown)=\"onDragStart($event)\" (mouseup)=\"onDragEnd($event)\">{{ element.name }}</div>\r\n</div>\r\n","import { Component, HostListener } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-draggable-element',\r\n  templateUrl: './draggable-element.component.html',\r\n  styleUrls: ['./draggable-element.component.css'],\r\n})\r\nexport class DraggableElementComponent {\r\n  private isDragging = false;\r\n  private draggedElement: HTMLElement | null = null;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  @HostListener('document:mousemove', ['$event'])\r\n  onDrag(event: MouseEvent): void {\r\n    if (this.isDragging && this.draggedElement) {\r\n      this.draggedElement.style.left = event.clientX + 'px';\r\n      this.draggedElement.style.top = event.clientY + 'px';\r\n    }\r\n  }\r\n\r\n  @HostListener('document:mouseup', ['$event'])\r\n  onDragEnd(event: MouseEvent): void {\r\n    if (this.isDragging && this.draggedElement) {\r\n      this.isDragging = false;\r\n\r\n      // Ottieni le coordinate dell'elemento trascinato come stringhe\r\n      const topValue = this.draggedElement.style.top;\r\n      const leftValue = this.draggedElement.style.left;\r\n\r\n      // Rimuovi \"px\" dai valori e converti in numeri\r\n      const topNumeric = parseInt(topValue, 10);\r\n      const leftNumeric = parseInt(leftValue, 10);\r\n\r\n      const coordinates = {\r\n        id: this.draggedElement.id,\r\n        x: topNumeric,\r\n        y: leftNumeric,\r\n      };\r\n\r\n      // Invia le coordinate al backend tramite una chiamata API\r\n      this.saveCoordinates(coordinates);\r\n\r\n      this.draggedElement = null;\r\n    }\r\n  }\r\n\r\n\r\n  onDragStart(event: MouseEvent): void {\r\n    this.isDragging = true;\r\n    this.draggedElement = event.target as HTMLElement;\r\n  }\r\n\r\n  private saveCoordinates(coordinates: any): void {\r\n    // Sostituisci con l'URL del tuo backend API\r\n    const apiUrl = 'https://localhost:7164';\r\n\r\n    this.http.post(`${apiUrl}/api/SaveCoordinate`, coordinates)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log('Coordinate salvate:', coordinates);\r\n        },\r\n        (error) => {\r\n          console.error('Errore durante il salvataggio delle coordinate:', error);\r\n          // Puoi gestire l'errore qui, ad esempio, mostrare un messaggio all'utente o effettuare altre azioni\r\n        }\r\n      );\r\n  }\r\n\r\n  private getCoordinatesFromAPI(): void {\r\n    const apiUrl = 'https://localhost:7164';\r\n\r\n    this.http.get(`${this.apiUrl}/GetCoordinate`)\r\n      .subscribe((elements: any[]) => {\r\n        if (elements && elements.length > 0) {\r\n          elements.forEach((element) => {\r\n            const elementId = element.id;\r\n            const elementTop = element.top;\r\n            const elementLeft = element.left;\r\n\r\n            const elementToPosition = this.draggableContainer.nativeElement.querySelector(`#${elementId}`);\r\n            if (elementToPosition) {\r\n              elementToPosition.style.top = `${elementTop}px`;\r\n              elementToPosition.style.left = `${elementLeft}px`;\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}