{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/draggable-element.service\";\nimport * as i2 from \"@angular/common\";\nfunction DraggableElementComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵtext(2, \" Caricamento in corso... \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DraggableElementComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_div_1_div_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.onDragStart($event));\n    })(\"mouseup\", function DraggableElementComponent_div_1_div_2_Template_div_mouseup_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.onDragEnd($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"id\", element_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r3.name);\n  }\n}\nfunction DraggableElementComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 4);\n    i0.ɵɵtemplate(2, DraggableElementComponent_div_1_div_2_Template, 2, 2, \"div\", 5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.elements);\n  }\n}\nexport class DraggableElementComponent {\n  constructor(draggableElementService) {\n    this.draggableElementService = draggableElementService;\n    this.isDragging = false;\n    this.draggedElement = null;\n    this.loading = true; // Inizializzata a true\n    this.elements = [];\n  }\n  ngOnInit() {\n    this.getElements();\n  }\n  onDrag(event) {\n    if (this.isDragging && this.draggedElement) {\n      this.draggedElement.style.top = event.clientY + 'px';\n      this.draggedElement.style.left = event.clientX + 'px';\n    }\n  }\n  onDragEnd(event) {\n    if (this.isDragging && this.draggedElement) {\n      this.isDragging = false;\n      // Ottengo le coordinate dell'elemento trascinato come stringhe\n      const topValue = this.draggedElement.style.top;\n      const leftValue = this.draggedElement.style.left;\n      // Rimuovo \"px\" dai valori e converto in int per salvare su db\n      const topNumeric = parseInt(topValue, 10);\n      const leftNumeric = parseInt(leftValue, 10);\n      const coordinates = {\n        name: this.draggedElement.id,\n        x: leftNumeric,\n        y: topNumeric\n      };\n      this.saveCoordinates(coordinates);\n      this.draggedElement = null;\n    }\n  }\n  onDragStart(event) {\n    this.isDragging = true;\n    this.draggedElement = event.target;\n  }\n  saveCoordinates(coordinates) {\n    this.draggableElementService.saveCoordinates(coordinates).subscribe(response => {\n      // Gestisci la risposta se necessario\n    }, error => {\n      // Gestisci l'errore se necessario\n    });\n  }\n  getCoordinatesByName(elementName) {\n    this.draggableElementService.getCoordinatesByName(elementName).subscribe(element => {\n      if (element) {\n        console.log('Coordinate salvate:', element.name, 'top y' + element.y, 'left x' + element.x);\n        const elementToPosition = document.getElementById(element.name);\n        if (elementToPosition) {\n          elementToPosition.style.top = `${element.y}px`;\n          elementToPosition.style.left = `${element.x}px`;\n        }\n      }\n    }, error => {\n      // Gestisci l'errore se necessario\n    });\n  }\n  getElements() {\n    this.draggableElementService.getElements().subscribe(elements => {\n      this.elements = elements;\n      elements.forEach(element => {\n        this.getCoordinatesByName(element.name);\n      });\n      this.loading = false; // Imposta loading a false quando la chiamata è completata\n    }, error => {\n      // Gestisci l'errore se necessario\n    });\n  }\n}\nDraggableElementComponent.ɵfac = function DraggableElementComponent_Factory(t) {\n  return new (t || DraggableElementComponent)(i0.ɵɵdirectiveInject(i1.DraggableElementService));\n};\nDraggableElementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DraggableElementComponent,\n  selectors: [[\"app-draggable-element\"]],\n  hostBindings: function DraggableElementComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousemove\", function DraggableElementComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onDrag($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseup\", function DraggableElementComponent_mouseup_HostBindingHandler($event) {\n        return ctx.onDragEnd($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"loading-container\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"loading-container\"], [1, \"loading-text\"], [1, \"draggable-container\"], [\"class\", \"draggable\", 3, \"id\", \"mousedown\", \"mouseup\", 4, \"ngFor\", \"ngForOf\"], [1, \"draggable\", 3, \"id\", \"mousedown\", \"mouseup\"]],\n  template: function DraggableElementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DraggableElementComponent_div_0_Template, 3, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, DraggableElementComponent_div_1_Template, 3, 1, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  styles: [\".draggable-element[_ngcontent-%COMP%] {\\r\\n  width: 100px;\\r\\n  height: 100px;\\r\\n  background-color: gray;\\r\\n  color: white;\\r\\n  position: absolute;\\r\\n  -webkit-user-select: none;\\r\\n          user-select: none;\\r\\n  cursor: grab;\\r\\n  transition: transform 0.3s ease;\\r\\n}\\r\\n\\r\\n.draggable-container[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.draggable[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  background-color: #3498db;\\r\\n  color: #ffffff;\\r\\n  padding: 10px;\\r\\n  cursor: grab;\\r\\n}\\r\\n\\r\\n.dragging[_ngcontent-%COMP%] {\\r\\n  cursor: grabbing;\\r\\n}\\r\\n\\r\\n\\r\\n.loading-container[_ngcontent-%COMP%] {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  height: 100vh; \\r\\n  background-color: rgba(255, 255, 255, 0.7); \\r\\n  position: fixed;\\r\\n  top: 0;\\r\\n  left: 0;\\r\\n  width: 100%;\\r\\n  z-index: 1000; \\r\\n}\\r\\n\\r\\n.loading-text[_ngcontent-%COMP%] {\\r\\n  font-size: 20px;\\r\\n  color: #333; \\r\\n  padding: 20px;\\r\\n  border-radius: 8px;\\r\\n  background-color: #fff; \\r\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kcmFnZ2FibGUtZWxlbWVudC9kcmFnZ2FibGUtZWxlbWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQix5QkFBaUI7VUFBakIsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWiwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxhQUFhO0VBQ2IsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBLDBGQUEwRjtBQUMxRjtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGFBQWEsRUFBRSw2RUFBNkU7RUFDNUYsMENBQTBDLEVBQUUseURBQXlEO0VBQ3JHLGVBQWU7RUFDZixNQUFNO0VBQ04sT0FBTztFQUNQLFdBQVc7RUFDWCxhQUFhLEVBQUUsZ0ZBQWdGO0FBQ2pHOztBQUVBO0VBQ0UsZUFBZTtFQUNmLFdBQVcsRUFBRSwwQkFBMEI7RUFDdkMsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQixzQkFBc0IsRUFBRSw0QkFBNEI7RUFDcEQsdUNBQXVDLEVBQUUsOEJBQThCO0FBQ3pFIiwic291cmNlc0NvbnRlbnQiOlsiLmRyYWdnYWJsZS1lbGVtZW50IHtcclxuICB3aWR0aDogMTAwcHg7XHJcbiAgaGVpZ2h0OiAxMDBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBncmF5O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgY3Vyc29yOiBncmFiO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2U7XHJcbn1cclxuXHJcbi5kcmFnZ2FibGUtY29udGFpbmVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbn1cclxuXHJcbi5kcmFnZ2FibGUge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQ5OGRiO1xyXG4gIGNvbG9yOiAjZmZmZmZmO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgY3Vyc29yOiBncmFiO1xyXG59XHJcblxyXG4uZHJhZ2dpbmcge1xyXG4gIGN1cnNvcjogZ3JhYmJpbmc7XHJcbn1cclxuXHJcbi8qIEFnZ2l1bmdpIHF1ZXN0byBzdGlsZSBuZWwgdHVvIGZpbGUgQ1NTIG8gbmVsIHR1byBjb21wb25lbnRlIGNvbiBBbmd1bGFyIGVuY2Fwc3VsYXRpb24gKi9cclxuLmxvYWRpbmctY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgaGVpZ2h0OiAxMDB2aDsgLyogSW1wb3N0YSBsJ2FsdGV6emEgZGVsIGRpdiBkaSBjYXJpY2FtZW50byBzdSB0dXR0YSBsJ2FsdGV6emEgZGVsbGEgcGFnaW5hICovXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjcpOyAvKiBBZ2dpdW5nZSB1bidvcGFjaXTDg8KgIGJpYW5jYSBwZXIgc2ZvY2FyZSBpbCBiYWNrZ3JvdW5kICovXHJcbiAgcG9zaXRpb246IGZpeGVkO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHotaW5kZXg6IDEwMDA7IC8qIEltcG9zdGEgdW4gaW5kaWNlIFogYWx0byBwZXIgZXNzZXJlIHNpY3VyaSBjaGUgc2lhIHNvcHJhIGdsaSBhbHRyaSBlbGVtZW50aSAqL1xyXG59XHJcblxyXG4ubG9hZGluZy10ZXh0IHtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgY29sb3I6ICMzMzM7IC8qIENvbG9yZSBkZWwgdGVzdG8gbmVybyAqL1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IC8qIENvbG9yZSBkaSBzZm9uZG8gYmlhbmNvICovXHJcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpOyAvKiBBZ2dpdW5nZSB1bidvbWJyYSBsZWdnZXJhICovXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","DraggableElementComponent","constructor","draggableElementService","ngOnInit","getElements","onDrag","event","isDragging","draggedElement","style","top","clientY","left","clientX","onDragEnd","topValue","leftValue","topNumeric","parseInt","leftNumeric","coordinates","name","id","x","y","saveCoordinates","onDragStart","target","subscribe","response","error","getCoordinatesByName","elementName","element","console","log","elementToPosition","document","getElementById","elements","forEach","loading","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\src\\dotnet\\DashboardApp\\ClientApp\\src\\app\\components\\draggable-element\\draggable-element.component.html","C:\\src\\dotnet\\DashboardApp\\ClientApp\\src\\app\\components\\draggable-element\\draggable-element.component.ts"],"sourcesContent":["<div *ngIf=\"loading\" class=\"loading-container\">\r\n  <div class=\"loading-text\">\r\n    Caricamento in corso...\r\n  </div>\r\n</div>\r\n\r\n<div *ngIf=\"!loading\">\r\n  <div class=\"draggable-container\">\r\n    <div class=\"draggable\"\r\n         *ngFor=\"let element of elements\"\r\n         [id]=\"element.name\"\r\n         (mousedown)=\"onDragStart($event)\"\r\n         (mouseup)=\"onDragEnd($event)\">{{ element.name }}</div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Elements } from '../../models/elements.model';\r\nimport { DraggableElementService } from '../../services/draggable-element.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-draggable-element',\r\n  templateUrl: './draggable-element.component.html',\r\n  styleUrls: ['./draggable-element.component.css'],\r\n})\r\n\r\nexport class DraggableElementComponent implements OnInit {\r\n\r\n  private isDragging = false;\r\n  private draggedElement: HTMLElement | null = null;\r\n  public loading = true;  // Inizializzata a true\r\n\r\n\r\n  public elements: Elements[] = [];\r\n\r\n  constructor(private draggableElementService: DraggableElementService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getElements();\r\n  }\r\n\r\n  @HostListener('document:mousemove', ['$event'])\r\n  onDrag(event: MouseEvent): void {\r\n    if (this.isDragging && this.draggedElement) {\r\n      this.draggedElement.style.top = event.clientY + 'px';\r\n      this.draggedElement.style.left = event.clientX + 'px';\r\n    }\r\n  }\r\n\r\n  @HostListener('document:mouseup', ['$event'])\r\n  onDragEnd(event: MouseEvent): void {\r\n    if (this.isDragging && this.draggedElement) {\r\n      this.isDragging = false;\r\n\r\n      // Ottengo le coordinate dell'elemento trascinato come stringhe\r\n      const topValue = this.draggedElement.style.top;\r\n      const leftValue = this.draggedElement.style.left;\r\n\r\n      // Rimuovo \"px\" dai valori e converto in int per salvare su db\r\n      const topNumeric = parseInt(topValue, 10);\r\n      const leftNumeric = parseInt(leftValue, 10);\r\n\r\n      const coordinates = {\r\n        name: this.draggedElement.id,\r\n        x: leftNumeric,\r\n        y: topNumeric,\r\n      };\r\n\r\n      this.saveCoordinates(coordinates);\r\n\r\n      this.draggedElement = null;\r\n    }\r\n  }\r\n\r\n  onDragStart(event: MouseEvent): void {\r\n    this.isDragging = true;\r\n    this.draggedElement = event.target as HTMLElement;\r\n  }\r\n\r\n  private saveCoordinates(coordinates: any): void {\r\n    this.draggableElementService.saveCoordinates(coordinates)\r\n      .subscribe(\r\n        (response) => {\r\n          // Gestisci la risposta se necessario\r\n        },\r\n        (error) => {\r\n          // Gestisci l'errore se necessario\r\n        }\r\n      );\r\n  }\r\n\r\n  private getCoordinatesByName(elementName: string): void {\r\n    this.draggableElementService.getCoordinatesByName(elementName)\r\n      .subscribe(\r\n        (element) => {\r\n          if (element) {\r\n\r\n            console.log('Coordinate salvate:', element.name, 'top y' + element.y, 'left x' + element.x);\r\n\r\n            const elementToPosition = document.getElementById(element.name) as HTMLElement;\r\n\r\n            if (elementToPosition) {\r\n              elementToPosition.style.top = `${element.y}px`;\r\n              elementToPosition.style.left = `${element.x}px`;\r\n            }\r\n          }\r\n        },\r\n        (error) => {\r\n          // Gestisci l'errore se necessario\r\n        }\r\n      );\r\n  }\r\n\r\n  private getElements(): void {\r\n    this.draggableElementService.getElements()\r\n      .subscribe(\r\n        (elements) => {\r\n          this.elements = elements;\r\n\r\n          elements.forEach((element: Elements) => {\r\n            this.getCoordinatesByName(element.name);\r\n          });\r\n          this.loading = false;  // Imposta loading a false quando la chiamata è completata\r\n        },\r\n        (error) => {\r\n          // Gestisci l'errore se necessario\r\n        }\r\n      );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}