{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction DraggableElementComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_div_1_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.onDragStart($event));\n    })(\"mouseup\", function DraggableElementComponent_div_1_Template_div_mouseup_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.onDragEnd($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"id\", element_r2.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(element_r2.name);\n  }\n}\nfunction DraggableElementComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"mousedown\", function DraggableElementComponent_div_2_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.startDragging($event));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const element_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"left\", ctx_r1.left, \"px\")(\"top\", ctx_r1.top, \"px\");\n    i0.ɵɵproperty(\"id\", element_r6.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r6.name, \"\\n\");\n  }\n}\nexport class DraggableElementComponent {\n  constructor(http) {\n    this.http = http;\n    this.isDragging = false;\n    this.draggedElement = null;\n    this.apiUrl = 'https://localhost:7164';\n    this.elements = [];\n    const storedLeft = sessionStorage.getItem('left');\n    const storedTop = sessionStorage.getItem('top');\n    this.left = storedLeft ? parseInt(storedLeft, 10) : 0;\n    this.top = storedTop ? parseInt(storedTop, 10) : 0;\n  }\n  ngOnInit() {\n    this.getElements();\n  }\n  startDragging(event) {\n    const initialX = event.clientX - this.left;\n    const initialY = event.clientY - this.top;\n    const drag = e => {\n      this.left = e.clientX - initialX;\n      this.top = e.clientY - initialY;\n    };\n    const stopDrag = () => {\n      // Salva le coordinate nel session storage\n      sessionStorage.setItem('left', this.left.toString());\n      sessionStorage.setItem('top', this.top.toString());\n      document.removeEventListener('mousemove', drag);\n      document.removeEventListener('mouseup', stopDrag);\n    };\n    document.addEventListener('mousemove', drag);\n    document.addEventListener('mouseup', stopDrag);\n  }\n  onDrag(event) {\n    if (this.isDragging && this.draggedElement) {\n      this.draggedElement.style.top = event.clientY + 'px';\n      this.draggedElement.style.left = event.clientX + 'px';\n    }\n  }\n  onDragEnd(event) {\n    if (this.isDragging && this.draggedElement) {\n      this.isDragging = false;\n      // Ottengo le coordinate dell'elemento trascinato come stringhe\n      const topValue = this.draggedElement.style.top;\n      const leftValue = this.draggedElement.style.left;\n      // Rimuovo \"px\" dai valori e converto in int per salvare su db\n      const topNumeric = parseInt(topValue, 10);\n      const leftNumeric = parseInt(leftValue, 10);\n      const coordinates = {\n        name: this.draggedElement.id,\n        x: leftNumeric,\n        y: topNumeric\n      };\n      this.saveCoordinates(coordinates);\n      this.draggedElement = null;\n    }\n  }\n  onDragStart(event) {\n    this.isDragging = true;\n    this.draggedElement = event.target;\n  }\n  saveCoordinates(coordinates) {\n    this.http.post(`${this.apiUrl}/api/SaveCoordinate`, coordinates).subscribe(response => {\n      console.log('Coordinate salvate:', coordinates);\n    }, error => {\n      console.error('Errore durante il salvataggio delle coordinate:', error);\n    });\n  }\n  getCoordinatesByName(elementName) {\n    this.http.get(`${this.apiUrl}/api/GetCoordinate?elementName=${elementName}`).subscribe(response => {\n      const element = response;\n      if (element) {\n        const name = element.name;\n        const elementTop = element.y;\n        const elementLeft = element.x;\n        console.log('Coordinate salvate:', name, 'top y' + elementTop, 'left x' + elementLeft);\n        const elementToPosition = document.getElementById(name);\n        if (elementToPosition) {\n          elementToPosition.style.top = `${elementTop}px`;\n          elementToPosition.style.left = `${elementLeft}px`;\n        }\n      }\n    });\n  }\n  getElements() {\n    this.http.get(`${this.apiUrl}/api/GetElements`).subscribe(response => {\n      const elements = response;\n      if (elements) {\n        elements.forEach(element => {\n          this.elements.push(element);\n        });\n        this.elements.forEach(element => {\n          this.getCoordinatesByName(element.name);\n        });\n      }\n    });\n  }\n}\nDraggableElementComponent.ɵfac = function DraggableElementComponent_Factory(t) {\n  return new (t || DraggableElementComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nDraggableElementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DraggableElementComponent,\n  selectors: [[\"app-draggable-element\"]],\n  hostBindings: function DraggableElementComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousemove\", function DraggableElementComponent_mousemove_HostBindingHandler($event) {\n        return ctx.onDrag($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseup\", function DraggableElementComponent_mouseup_HostBindingHandler($event) {\n        return ctx.onDragEnd($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"draggable-container\"], [\"class\", \"draggable\", 3, \"id\", \"mousedown\", \"mouseup\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"draggable\", 3, \"id\", \"left\", \"top\", \"mousedown\", 4, \"ngFor\", \"ngForOf\"], [1, \"draggable\", 3, \"id\", \"mousedown\", \"mouseup\"], [1, \"draggable\", 3, \"id\", \"mousedown\"]],\n  template: function DraggableElementComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, DraggableElementComponent_div_1_Template, 2, 2, \"div\", 1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, DraggableElementComponent_div_2_Template, 2, 6, \"div\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.elements);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.elements);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\".draggable-element[_ngcontent-%COMP%] {\\r\\n  width: 100px;\\r\\n  height: 100px;\\r\\n  background-color: gray;\\r\\n  color: white;\\r\\n  position: absolute;\\r\\n  -webkit-user-select: none;\\r\\n          user-select: none;\\r\\n  cursor: grab;\\r\\n  transition: transform 0.3s ease;\\r\\n}\\r\\n\\r\\n.draggable-container[_ngcontent-%COMP%] {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.draggable[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  background-color: #3498db;\\r\\n  color: #ffffff;\\r\\n  padding: 10px;\\r\\n  cursor: grab;\\r\\n}\\r\\n\\r\\n.dragging[_ngcontent-%COMP%] {\\r\\n  cursor: grabbing;\\r\\n}\\r\\n\\r\\n#draggable[_ngcontent-%COMP%] {\\r\\n  position: absolute;\\r\\n  cursor: grab; \\r\\n  width: 100px; \\r\\n  height: 100px; \\r\\n  background-color: #3498db; \\r\\n  color: #fff; \\r\\n  border: 2px solid #2980b9; \\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9kcmFnZ2FibGUtZWxlbWVudC9kcmFnZ2FibGUtZWxlbWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGtCQUFrQjtFQUNsQix5QkFBaUI7VUFBakIsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWiwrQkFBK0I7QUFDakM7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIseUJBQXlCO0VBQ3pCLGNBQWM7RUFDZCxhQUFhO0VBQ2IsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLFlBQVksRUFBRSwwRkFBMEY7RUFDeEcsWUFBWSxFQUFFLG9EQUFvRDtFQUNsRSxhQUFhLEVBQUUsaURBQWlEO0VBQ2hFLHlCQUF5QixFQUFFLGdEQUFnRDtFQUMzRSxXQUFXLEVBQUUsZ0RBQWdEO0VBQzdELHlCQUF5QixFQUFFLCtDQUErQztBQUM1RSIsInNvdXJjZXNDb250ZW50IjpbIi5kcmFnZ2FibGUtZWxlbWVudCB7XHJcbiAgd2lkdGg6IDEwMHB4O1xyXG4gIGhlaWdodDogMTAwcHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JheTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHVzZXItc2VsZWN0OiBub25lO1xyXG4gIGN1cnNvcjogZ3JhYjtcclxuICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4zcyBlYXNlO1xyXG59XHJcblxyXG4uZHJhZ2dhYmxlLWNvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uZHJhZ2dhYmxlIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0OThkYjtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxuICBwYWRkaW5nOiAxMHB4O1xyXG4gIGN1cnNvcjogZ3JhYjtcclxufVxyXG5cclxuLmRyYWdnaW5nIHtcclxuICBjdXJzb3I6IGdyYWJiaW5nO1xyXG59XHJcblxyXG4jZHJhZ2dhYmxlIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgY3Vyc29yOiBncmFiOyAvKiBDYW1iaWEgaWwgY3Vyc29yZSBkdXJhbnRlIGlsIHRyYXNjaW5hbWVudG8gcGVyIGluZGljYXJlIGNoZSBsJ2VsZW1lbnRvIMODwqggdHJhc2NpbmFiaWxlICovXHJcbiAgd2lkdGg6IDEwMHB4OyAvKiBJbXBvc3RhIGxhIGxhcmdoZXp6YSBkZWxsJ2VsZW1lbnRvIGEgdHVhIHNjZWx0YSAqL1xyXG4gIGhlaWdodDogMTAwcHg7IC8qIEltcG9zdGEgbCdhbHRlenphIGRlbGwnZWxlbWVudG8gYSB0dWEgc2NlbHRhICovXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0OThkYjsgLyogQ2FtYmlhIGlsIGNvbG9yZSBkaSBzZm9uZG8gYSB0dW8gcGlhY2ltZW50byAqL1xyXG4gIGNvbG9yOiAjZmZmOyAvKiBDYW1iaWEgaWwgY29sb3JlIGRlbCB0ZXN0byBhIHR1byBwaWFjaW1lbnRvICovXHJcbiAgYm9yZGVyOiAycHggc29saWQgIzI5ODBiOTsgLyogQ2FtYmlhIGxvIHN0aWxlIGRlbCBib3JkbyBhIHR1byBwaWFjaW1lbnRvICovXHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","DraggableElementComponent","constructor","http","storedLeft","sessionStorage","getItem","storedTop","left","parseInt","top","ngOnInit","getElements","startDragging","event","initialX","clientX","initialY","clientY","drag","e","stopDrag","setItem","toString","document","removeEventListener","addEventListener","onDrag","isDragging","draggedElement","style","onDragEnd","topValue","leftValue","topNumeric","leftNumeric","coordinates","name","id","x","y","saveCoordinates","onDragStart","target","post","apiUrl","subscribe","response","console","log","error","getCoordinatesByName","elementName","get","element","elementTop","elementLeft","elementToPosition","getElementById","elements","forEach","push","selectors","hostBindings","ctx"],"sourceRoot":"","sources":["C:\\src\\dotnet\\DashboardApp\\ClientApp\\src\\app\\components\\draggable-element\\draggable-element.component.html","C:\\src\\dotnet\\DashboardApp\\ClientApp\\src\\app\\components\\draggable-element\\draggable-element.component.ts"],"sourcesContent":["<div class=\"draggable-container\">\r\n  <div class=\"draggable\"\r\n       *ngFor=\"let element of elements\"\r\n       [id]=\"element.name\"\r\n       (mousedown)=\"onDragStart($event)\"\r\n       (mouseup)=\"onDragEnd($event)\">{{ element.name }}</div>\r\n</div>\r\n\r\n<div class=\"draggable\"\r\n     *ngFor=\"let element of elements\"\r\n     [id]=\"element.name\"\r\n     (mousedown)=\"startDragging($event)\"\r\n     [style.left.px]=\"left\" [style.top.px]=\"top\">\r\n  {{ element.name }}\r\n</div>\r\n\r\n","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DraggableElement } from '../../models/draggable-element.model';\r\nimport { Elements } from '../../models/elements.model';\r\n\r\n@Component({\r\n  selector: 'app-draggable-element',\r\n  templateUrl: './draggable-element.component.html',\r\n  styleUrls: ['./draggable-element.component.css'],\r\n})\r\n\r\nexport class DraggableElementComponent implements OnInit {\r\n  private isDragging = false;\r\n  private draggedElement: HTMLElement | null = null;\r\n  private apiUrl = 'https://localhost:7164';\r\n\r\n  public elements: Elements[] = [];\r\n\r\n\r\n  left: number;\r\n  top: number;\r\n\r\n  constructor(private http: HttpClient) {    // Inizializza le coordinate da sessionStorage, se disponibili\r\n    const storedLeft = sessionStorage.getItem('left');\r\n    const storedTop = sessionStorage.getItem('top');\r\n\r\n    this.left = storedLeft ? parseInt(storedLeft, 10) : 0;\r\n    this.top = storedTop ? parseInt(storedTop, 10) : 0;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getElements();\r\n}\r\n\r\n  startDragging(event: MouseEvent): void {\r\n    const initialX = event.clientX - this.left;\r\n    const initialY = event.clientY - this.top;\r\n\r\n    const drag = (e: MouseEvent) => {\r\n      this.left = e.clientX - initialX;\r\n      this.top = e.clientY - initialY;\r\n    };\r\n\r\n    const stopDrag = () => {\r\n      // Salva le coordinate nel session storage\r\n      sessionStorage.setItem('left', this.left.toString());\r\n      sessionStorage.setItem('top', this.top.toString());\r\n\r\n      document.removeEventListener('mousemove', drag);\r\n      document.removeEventListener('mouseup', stopDrag);\r\n    };\r\n\r\n    document.addEventListener('mousemove', drag);\r\n    document.addEventListener('mouseup', stopDrag);\r\n  }\r\n\r\n\r\n  @HostListener('document:mousemove', ['$event'])\r\n  onDrag(event: MouseEvent): void {\r\n    if (this.isDragging && this.draggedElement) {\r\n      this.draggedElement.style.top = event.clientY + 'px';\r\n      this.draggedElement.style.left = event.clientX + 'px';\r\n    }\r\n  }\r\n\r\n  @HostListener('document:mouseup', ['$event'])\r\n  onDragEnd(event: MouseEvent): void {\r\n    if (this.isDragging && this.draggedElement) {\r\n      this.isDragging = false;\r\n\r\n      // Ottengo le coordinate dell'elemento trascinato come stringhe\r\n      const topValue = this.draggedElement.style.top;\r\n      const leftValue = this.draggedElement.style.left;\r\n\r\n      // Rimuovo \"px\" dai valori e converto in int per salvare su db\r\n      const topNumeric = parseInt(topValue, 10);\r\n      const leftNumeric = parseInt(leftValue, 10);\r\n\r\n      const coordinates = {\r\n        name: this.draggedElement.id,\r\n        x: leftNumeric,\r\n        y: topNumeric,\r\n      };\r\n\r\n      this.saveCoordinates(coordinates);\r\n\r\n      this.draggedElement = null;\r\n    }\r\n  }\r\n\r\n  onDragStart(event: MouseEvent): void {\r\n    this.isDragging = true;\r\n    this.draggedElement = event.target as HTMLElement;\r\n  }\r\n\r\n  private saveCoordinates(coordinates: any): void {\r\n    this.http.post(`${this.apiUrl}/api/SaveCoordinate`, coordinates)\r\n      .subscribe(\r\n        (response) => {\r\n          console.log('Coordinate salvate:', coordinates);\r\n        },\r\n        (error) => {\r\n          console.error('Errore durante il salvataggio delle coordinate:', error);\r\n        }\r\n      );\r\n  }\r\n\r\n  private getCoordinatesByName(elementName: string): void {\r\n    this.http.get<any>(`${this.apiUrl}/api/GetCoordinate?elementName=${elementName}`)\r\n      .subscribe((response: any) => {\r\n        const element: DraggableElement = response;\r\n\r\n        if (element) {\r\n          const name = element.name;\r\n          const elementTop = element.y; \r\n          const elementLeft = element.x; \r\n\r\n          console.log('Coordinate salvate:', name, 'top y' + elementTop, 'left x' + elementLeft);\r\n\r\n          const elementToPosition = document.getElementById(name) as HTMLElement;\r\n\r\n          if (elementToPosition) {\r\n            elementToPosition.style.top = `${elementTop}px`;\r\n            elementToPosition.style.left = `${elementLeft}px`;\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  private getElements(): void {\r\n    this.http.get<any>(`${this.apiUrl}/api/GetElements`).subscribe((response: any) => {\r\n      const elements: Elements[] = response;\r\n\r\n      if (elements) {\r\n        elements.forEach((element: Elements) => {\r\n          this.elements.push(element);\r\n        });\r\n\r\n        this.elements.forEach((element: Elements) => {\r\n          this.getCoordinatesByName(element.name);\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}